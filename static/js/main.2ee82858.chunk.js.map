{"version":3,"sources":["components/ContactsList/ContactItem/ContactItem.module.css","App.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filter","axios","defaults","baseURL","fetchContacts","dispatch","actions","get","then","data","catch","error","deleteContact","id","delete","name","number","contact","post","getLoading","state","loading","getContacts","contacts","getFilter","filteredContacts","createSelector","toLowerCase","includes","ContactForm","onSubmit","e","preventDefault","props","checkUniq","formReset","some","i","alert","setState","onChange","currentTarget","value","this","type","pattern","title","required","React","Component","connect","operations","ContactItem","onFetchContacts","onDeleteClick","map","className","styles","contacts_item","contacts_item_button","onClick","isLoading","onFilter","target","placeholder","App","container","contactsReducer","createReducer","payload","filterReducer","middleware","combineReducers","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ee82858.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_item\":\"ContactItem_contacts_item__1v7Rt\",\"contacts_item_button\":\"ContactItem_contacts_item_button__vc_Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3_2f5\"};","import { createAction } from \"@reduxjs/toolkit\"\r\n\r\nexport const addContactRequest = createAction(\"contacts/AddContactRequest\")\r\nexport const addContactSuccess = createAction(\"contacts/AddContactSuccess\")\r\nexport const addContactError = createAction(\"contacts/AddContactError\")\r\n\r\nexport const fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\")\r\nexport const fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\")\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\")\r\n\r\nexport const deleteContactRequest = createAction(\"contacts/deleteContactRequest\")\r\nexport const deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\")\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\")\r\n\r\nexport const filter = createAction(\"contacts/filter\")\r\n","import axios from \"axios\"\r\nimport * as actions from \"./actions\"\r\n\r\naxios.defaults.baseURL = \"http://localhost:1488\"\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest())\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactsError(error)))\r\n}\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = { name, number }\r\n\r\n    dispatch(actions.addContactRequest())\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n      .catch((error) => dispatch(actions.addContactError(error)))\r\n  }\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest())\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error)))\r\n}\r\n\r\nexport default { addContact, deleteContact, fetchContacts }\r\n","import { createSelector } from \"@reduxjs/toolkit\"\r\n\r\nexport const getLoading = (state) => state.loading\r\nexport const getContacts = (state) => state.contacts\r\nexport const getFilter = (state) => state.filter\r\n\r\nexport const filteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\r\n})\r\n\r\nexport default { getLoading, getContacts, getFilter, filteredContacts }\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\" // ES6\r\nimport { connect } from \"react-redux\"\r\nimport operations from \"../../redux/operations\"\r\nimport { getContacts } from \"../../redux/selectors\"\r\nclass ContactForm extends React.Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  }\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { contacts } = this.props\r\n    const { name } = this.state\r\n    this.checkUniq(contacts, name)\r\n\r\n    this.formReset()\r\n  }\r\n\r\n  checkUniq = (contacts, name) => {\r\n    const { onSubmit } = this.props\r\n    return contacts.some((i) => i.name === name) ? alert(`${name} is already in contacts`) : onSubmit({ ...this.state })\r\n  }\r\n\r\n  formReset = () => {\r\n    this.setState({ name: \"\", number: \"\" })\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value })\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onChange}\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.onChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" onSubmit={this.onSubmit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => {\r\n    return dispatch(operations.addContact(name, number))\r\n  },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import { connect } from \"react-redux\"\r\nimport React, { Component } from \"react\"\r\n\r\nimport * as operations from \"../../../redux/operations\"\r\nimport { filteredContacts, getContacts, getFilter } from \"../../../redux/selectors\"\r\n\r\nimport styles from \"./ContactItem.module.css\"\r\n\r\nclass ContactItem extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts()\r\n  }\r\n\r\n  // getFilteredContacts = (allContacts, filterValue) =>\r\n  //   allContacts.filter((contact) => contact.name.toLowerCase().includes(filterValue.toLowerCase()))\r\n\r\n  render() {\r\n    const { onDeleteClick, contacts } = this.props\r\n    return contacts.map(({ id, name, number }) => {\r\n      return (\r\n        <li key={id} className={styles.contacts_item}>\r\n          {name}: {number}\r\n          <button className={styles.contacts_item_button} onClick={() => onDeleteClick(id)} type=\"button\">\r\n            Delete\r\n          </button>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: filteredContacts(state),\r\n  filter: getFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteClick: (id) => dispatch(operations.deleteContact(id)),\r\n  onFetchContacts: () => dispatch(operations.fetchContacts()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport ContactItem from \"./ContactItem\"\r\n\r\nimport { getLoading } from \"../../redux/selectors\"\r\n\r\nconst ContactsList = ({ isLoading }) => (\r\n  <>\r\n    {isLoading && <h1>Загружаем</h1>}\r\n    <ul>\r\n      <ContactItem />\r\n    </ul>\r\n  </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: getLoading(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(ContactsList)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport * as actions from \"../../redux/actions\"\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return <input type=\"text\" value={value} placeholder=\"Filter\" onChange={onFilter} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.filter,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilter: (e) => dispatch(actions.filter(e.target.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React from \"react\"\nimport ContactForm from \"./components/ContactForm\"\nimport ContactsList from \"./components/ContactsList\"\nimport Filter from \"./components/Filter\"\n\nimport styles from \"./App.module.css\"\nclass App extends React.Component {\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactsList />\n        </>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\"\r\nimport * as actions from \"./actions\"\r\n\r\nexport const contactsReducer = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nexport const filterReducer = createReducer(\"\", {\r\n  [actions.filter]: (state, { payload }) => payload,\r\n})\r\n\r\nexport const loading = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n  contactsReducer,\r\n  filterReducer,\r\n  loading,\r\n})\r\n","import { combineReducers, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\"\r\n\r\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\"\r\nimport { contactsReducer, filterReducer, loading } from \"./reducers\"\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n]\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n})\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n})\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}